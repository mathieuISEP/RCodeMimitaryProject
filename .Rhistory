a = table(1,2,4,6,8,10)
a
a
cl
#----------------------Correction TD5
Auto=read.table("Auto.txt",header = T,sep=";")
attach(Auto)
mpg01 = rep(0, length(mpg))
mpg01[mpg > median(mpg)] = 1
Auto = data.frame(Auto, mpg01)
summary(Auto)
cor(Auto[,-9])
pairs(Auto)
train = (year%%2 == 0)  # if the year is even
test = !train
Auto.train = Auto[train, ]
Auto.test = Auto[test, ]
mpg01.test = mpg01[test]
#LDA
library(MASS)
lda.fit = lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto, subset = train)
lda.pred = predict(lda.fit, Auto.test)
mean(lda.pred$class != mpg01.test)
table(lda.pred$class,mpg01.test)
#QDA
qda.fit = qda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto, subset = train)
qda.pred = predict(qda.fit, Auto.test)
mean(qda.pred$class != mpg01.test)
table(qda.pred$class,mpg01.test)
#----ROC LDA
install.packages("pROC")
library(pROC)
lda.probs=lda.pred$posterior[,1]
ROC.lda=roc(mpg01.test,lda.probs,levels=c(1,0))
plot.roc(ROC.lda,print.auc = T,xlab="1-Specificity",col="red",axes=T)
#----ROC QDA
qda.probs=qda.pred$posterior[,1]
ROC.qda=roc(mpg01.test,qda.probs,levels=c(1,0))
plot.roc(ROC.qda,print.auc = T,xlab="1-Specificity",col="red",axes=T)
#----------------------Correction TD5
Auto=read.table("Auto.txt",header = T,sep=";")
attach(Auto)
mpg01 = rep(0, length(mpg))
mpg01[mpg > median(mpg)] = 1
Auto = data.frame(Auto, mpg01)
summary(Auto)
cor(Auto[,-9])
pairs(Auto)
train = (year%%2 == 0)  # if the year is even
test = !train
Auto.train = Auto[train, ]
Auto.test = Auto[test, ]
mpg01.test = mpg01[test]
#LDA
library(MASS)
lda.fit = lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto, subset = train)
lda.pred = predict(lda.fit, Auto.test)
mean(lda.pred$class != mpg01.test)
table(lda.pred$class,mpg01.test)
#QDA
qda.fit = qda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto, subset = train)
qda.pred = predict(qda.fit, Auto.test)
mean(qda.pred$class != mpg01.test)
table(qda.pred$class,mpg01.test)
#----ROC LDA
install.packages("pROC")
library(pROC)
lda.probs=lda.pred$posterior[,1]
ROC.lda=roc(mpg01.test,lda.probs,levels=c(1,0))
plot.roc(ROC.lda,print.auc = T,xlab="1-Specificity",col="red",axes=T)
#----ROC QDA
qda.probs=qda.pred$posterior[,1]
ROC.qda=roc(mpg01.test,qda.probs,levels=c(1,0))
plot.roc(ROC.qda,print.auc = T,xlab="1-Specificity",col="red",axes=T)
install.packages("pROC")
setwd("~/ISEP/A3-BI/Projet_fin_de_parcours/RVisualization")
output = read.csv("output.txt", header = TRUE, sep=",")
View(output)
View(output)
output=read.csv("output.txt", sep=",", header=FALSE) #C'est outputtest, le petit sample de output dispo sur discord
#set your working directory
output=read.csv("output.txt", sep=",", header=FALSE) #C'est outputtest, le petit sample de output dispo sur discord
output["NumberTypeMessage"]<- NA
output$`NumberTypeMessage`[output$V1=="PositionReportClassAScheduled{messageType=PositionReportClassAScheduled}"]=1
output$`NumberTypeMessage`[output$V1=="PositionReportClassAResponseToInterrogation{messageType=PositionReportClassAResponseToInterrogation}"]=2
output$`NumberTypeMessage`[output$V1=="StandardClassBCSPositionReport{messageType=StandardClassBCSPositionReport"]=3
output$`NumberTypeMessage`[output$V1=="ShipAndVoyageData{messageType=ShipAndVoyageRelatedData"]=4
output$V2=gsub("^.*?=","", output$V2)
output$V3=gsub("^.*?=","", output$V3)
output$V4=gsub("^.*?=","", output$V4)
output$V5=gsub("^.*?=","", output$V5)
output$V6=gsub("^.*?=","", output$V6)
output$V7=gsub("^.*?=","", output$V7)
output$V8=gsub("^.*?=","", output$V8)
output$V9=gsub("^.*?=","", output$V9)
output$V10=gsub("^.*?=","", output$V10)
output$V11=gsub("^.*?=","", output$V11)
output$V12=gsub("^.*?=","", output$V12)
output$V20=gsub("^.*?=","", output$V20)
output$V21=gsub("^.*?=","", output$V21)
output$V22=gsub("^.*?=","", output$V22)
output$V23=gsub("^.*?=","", output$V23)
colnames(output) <- c("MessageType", "NavigationStatus", "RateOfTurn", "SpeedOverGround", "PositionAccuracy", "Latitude", "Longitude", "CourseOverGround", "TrueHeading", "Timestamp", "specialManeuverIndicator", "raimFlag", "AISMessage", "SyncState", "SlotTime-out", "Undefined", "AB", "Data", "Data1", "Metadata", "Received", "repeatIndicator", "sourceMmsi","NumberTypeMessage")
output <- output[,c(24,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23)]
attach(output)
output1 = output[which(NumberTypeMessage == 1),]
<<<<<<< HEAD
output2 = output[which(NumberTypeMessage == 2),]
output$Latitude = as.numeric(as.character(output$Latitude))
output$Longitude = as.numeric(as.character(output$Longitude))
=======
#Calculate Distance from  Latitude and Longitude
library(geosphere)
pos1 = c(Latitude[1],Longitude[1])
pos2 = c(Latitude[2],Longitude[2])
distm (pos1,pos2, fun = distHaversine)
>>>>>>> 0fec16f5f3455caa218395d930e581f286e081a6
View(output)
View(output1)
View(output2)
pos1
pos2
distm?
distm?
oj
help(distm)
prout=c(0,0)
prout
as.numeric(pos1)
as.numeric(c(Latitude[1],Longitude[1]))
output$Latitude = as.numeric(output$Latitude)
output$Longitude = as.numeric(output$Longitude)
sapply(output, mode)
output=read.csv("output.txt", sep=",", header=FALSE) #C'est outputtest, le petit sample de output dispo sur discord
output=read.csv("output.txt", sep=",", header=FALSE)
setwd("C:/Users/Folco/Desktop/Isep - Exposé/Isep 5ème année/Projet codeR/RCodeMimitaryProject")
output=read.csv("output.txt", sep=",", header=FALSE)
output=read.csv("output.txt", sep=",", header=FALSE) #C'est outputtest, le petit sample de output dispo sur discord
output["NumberTypeMessage"]<- NA
output$`NumberTypeMessage`[output$V1=="PositionReportClassAScheduled{messageType=PositionReportClassAScheduled}"]=1
output$`NumberTypeMessage`[output$V1=="PositionReportClassAResponseToInterrogation{messageType=PositionReportClassAResponseToInterrogation}"]=2
output$`NumberTypeMessage`[output$V1=="StandardClassBCSPositionReport{messageType=StandardClassBCSPositionReport"]=3
output$`NumberTypeMessage`[output$V1=="ShipAndVoyageData{messageType=ShipAndVoyageRelatedData"]=4
output$V2=gsub("^.*?=","", output$V2)
output$V3=gsub("^.*?=","", output$V3)
output$V4=gsub("^.*?=","", output$V4)
output$V5=gsub("^.*?=","", output$V5)
output$V6=gsub("^.*?=","", output$V6)
output$V7=gsub("^.*?=","", output$V7)
output$V8=gsub("^.*?=","", output$V8)
output$V9=gsub("^.*?=","", output$V9)
output$V10=gsub("^.*?=","", output$V10)
output$V11=gsub("^.*?=","", output$V11)
output$V12=gsub("^.*?=","", output$V12)
output$V20=gsub("^.*?=","", output$V20)
output$V21=gsub("^.*?=","", output$V21)
output$V22=gsub("^.*?=","", output$V22)
output$V23=gsub("^.*?=","", output$V23)
colnames(output) <- c("MessageType", "NavigationStatus", "RateOfTurn", "SpeedOverGround", "PositionAccuracy", "Latitude", "Longitude", "CourseOverGround", "TrueHeading", "Timestamp", "specialManeuverIndicator", "raimFlag", "AISMessage", "SyncState", "SlotTime-out", "Undefined", "AB", "Data", "Data1", "Metadata", "Received", "repeatIndicator", "sourceMmsi","NumberTypeMessage")
output <- output[,c(24,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23)]
attach(output)
output3 = output[which(NumberTypeMessage == 3|NA),]
View(output3)
output3 = output[which(NumberTypeMessage == 3 & NumberTypeMessage == NA),]
output3 = output[which(NumberTypeMessage == 3|NA),]
output3 = output[which(NumberTypeMessage == NA),]
output3 = output[which(NumberTypeMessage == 3|'NA'),]
output3 = output[which(NumberTypeMessage == 3|"NA"),]
output3 = output[which(NumberTypeMessage == "NA"),]
output3 = output[which(NumberTypeMessage == NA),]
View(output3)
output3 = output[which(NumberTypeMessage == "NA"),]
View(output3)
output3 = output[which(NumberTypeMessage == "NA"),]
output<-within(output,NumberTypeMessage[NumberTypeMessage == 'NA']<-'3')
output3 = output[which(NumberTypeMessageis.NA),]
output3 = output[which(NumberTypeMessage == 3 & NumberTypeMessage == NA),]
output3 = output[which(NumberTypeMessage == 3 & Longitude == MMSI),]
output3 = output[which(NumberTypeMessage == 3 & Longitude == 0),]
output3 = output[which(NumberTypeMessage == 3 | Longitude == 0),]
output3 = output[which(NumberTypeMessage == 3 | Latitude == 0),]
output3 = output[which(NumberTypeMessage == 3 | MessageType == B),]
output3 = output[which(NumberTypeMessage == 3 | MessageType == 'B'),]
output3 = output[which(NumberTypeMessage == 3 | MessageType == 'A|B'),]
output3 = output[which(NumberTypeMessage == 3 | MessageType == 'A'|'B'),]
output3 = output[which(NumberTypeMessage == 3 | MessageType == 'A'| MessageType == 'B'),]
output3 = output[which(NumberTypeMessage == 3 | rownames(where(NumberTypeMessage==3))),]
output3 = output[which(NumberTypeMessage == 3 | rownames(which(NumberTypeMessage==3))),]
output3 = output[which(NumberTypeMessage == 3 | rownames(which(NumberTypeMessage==3))+1),]
output3 = output[which(NumberTypeMessage == 3 | rownames(which(NumberTypeMessage==3))+1),]
output3 = output[which(NumberTypeMessage == 3 | rownames(which(NumberTypeMessage==3)+1)),]
output3 = output[which(NumberTypeMessage == 3 | rownames(which(NumberTypeMessage==3))+1),]
output4 = output[which(NumberTypeMessage == 4 | MessageType == 2),]
View(output4)
output3 = output[which(NumberTypeMessage == 3 | rownames(which(NumberTypeMessage==3))+1),]
outputna<-[is.na.data.frame(output)]
outputna<-is.na.data.frame(output)
View(outputna)
new_DF <- output[NumberTypeMessage(is.na(DF)) > 0,]
new_DF <- subset[output(is.na(NumberTypeMessage)) > 0,]
new_DF <- output[rowSums(is.na(NumberTypeMessage)) > 0,]
new_DF <- output[rowSums(is.na(output)) > 0,]
View(new_DF)
