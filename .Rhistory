output1 = output[which(NumberTypeMessage == 1),]
output2 = output[which(NumberTypeMessage == 2),]
output3 = output[which(NumberTypeMessage == 3),]
output4 = output[which(NumberTypeMessage == 4),]
output5 = output[which(NumberTypeMessage == 5),]
output6 = output[which(NumberTypeMessage == 6),]
output7 = output[which(NumberTypeMessage == 7),]
output8 = output[which(NumberTypeMessage == 8),]
#traitement des colonnes par type de message
# pour les messages de type 1
#suprression des éléments inutiles dans les colonnes
output1$V2=gsub("^.*?=","", output1$V2)
output1$V3=gsub("^.*?=","", output1$V3)
output1$V4=gsub("^.*?=","", output1$V4)
output1$V5=gsub("^.*?=","", output1$V5)
output1$V6=gsub("^.*?=","", output1$V6)
output1$V7=gsub("^.*?=","", output1$V7)
output1$V8=gsub("^.*?=","", output1$V8)
output1$V9=gsub("^.*?=","", output1$V9)
output1$V10=gsub("^.*?=","", output1$V10)
output1$V11=gsub("^.*?=","", output1$V11)
output1$V12=gsub("^.*?=","", output1$V12)
output1$V20=gsub("^.*?=","", output1$V20)
output1$V21=gsub("^.*?=","", output1$V21)
output1$V22=gsub("^.*?=","", output1$V22)
output1$V23=gsub("[[:punct:][:lower:][:upper:]]","", output1$V23)
#nomenclature des colonnes
colnames(output1) <- c("NumberTypeMessage","MessageType", "NavigationStatus", "RateOfTurn", "SpeedOverGround", "PositionAccuracy", "Latitude", "Longitude", "CourseOverGround", "TrueHeading", "Timestamp", "specialManeuverIndicator", "raimFlag", "AISMessage", "SyncState", "SlotTime-out", "Undefined", "AB", "Data", "Data1", "Metadata", "Received", "repeatIndicator", "sourceMmsi")
#supression des colonnes inutiles
output1 = output1[,-c(21,22,25:39)]
# pour les messages de type 2
#suprression des éléments inutiles dans les colonnes
output2$V2=gsub("^.*?=","", output2$V2)
output2$V3=gsub("^.*?=","", output2$V3)
output2$V4=gsub("^.*?=","", output2$V4)
output2$V5=gsub("^.*?=","", output2$V5)
output2$V6=gsub("^.*?=","", output2$V6)
output2$V7=gsub("^.*?=","", output2$V7)
output2$V8=gsub("^.*?=","", output2$V8)
output2$V9=gsub("^.*?=","", output2$V9)
output2$V10=gsub("^.*?=","", output2$V10)
output2$V11=gsub("^.*?=","", output2$V11)
output2$V12=gsub("^.*?=","", output2$V12)
output2$V20=gsub("^.*?=","", output2$V20)
output2$V21=gsub("^.*?=","", output2$V21)
output2$V22=gsub("^.*?=","", output2$V22)
output2$V23=gsub("[[:punct:][:lower:][:upper:]]","", output2$V23)
#nomenclature des colonnes
colnames(output2) <- c("NumberTypeMessage","MessageType", "NavigationStatus", "RateOfTurn", "SpeedOverGround", "PositionAccuracy", "Latitude", "Longitude", "CourseOverGround", "TrueHeading", "Timestamp", "specialManeuverIndicator", "raimFlag", "AISMessage", "SyncState", "SlotTime-out", "Undefined", "AB", "Data", "Data1", "Metadata", "Received", "repeatIndicator", "sourceMmsi")
#supression des colonnes inutiles
output2 = output2[,-c(21,22,25:39)]
# pour les messages de type 3
#suprression des éléments inutiles dans les colonnes
output3$V2=gsub("^.*?=","", output3$V2)
output3$V3=gsub("^.*?=","", output3$V3)
output3$V4=gsub("^.*?=","", output3$V4)
output3$V5=gsub("^.*?=","", output3$V5)
output3$V6=gsub("^.*?=","", output3$V6)
output3$V7=gsub("^.*?=","", output3$V7)
output3$V8=gsub("^.*?=","", output3$V8)
output3$V9=gsub("^.*?=","", output3$V9)
output3$V10=gsub("^.*?=","", output3$V10)
output3$V11=gsub("^.*?=","", output3$V11)
output3$V12=gsub("^.*?=","", output3$V12)
output3$V13=gsub("^.*?=","", output3$V13)
output3$V14=gsub("^.*?=","", output3$V14)
output3$V15=gsub("^.*?=","", output3$V15)
output3$V16=gsub("^.*?=","", output3$V16)
output3$V17=gsub("^.*?=","", output3$V17)
output3$V18=gsub("^.*?=","", output3$V18)
output3$V19=gsub("^.*?=","", output3$V19)
output3$V20=gsub("^.*?=","", output3$V20)
output3$V27=gsub("^.*?=","", output3$V27)
output3$V28=gsub("^.*?=","", output3$V28)
output3$V29=gsub("^.*?=","", output3$V29)
output3$V30=gsub("[[:punct:][:lower:][:upper:]]","", output3$V30)
#nomenclature des colonnes
colnames(output3) <- c("NumberTypeMessage","MessageType", "RegionalReserved1", "SpeedOverGround", "PositionAccurate", "Latitude", "Longitude", "CourseOverGround", "TrueHeading", "Second", "RegionalReserved2", "CsUnit", "display", "dsc", "band", "message22", "assigned", "raimFlag", "commStateSelectorFlag", "commState", "AISMessage", "SyncState", "SlotTime-out", "Undefined", "AB","Data","Data1","Metadata", "Received","repeatIndicator", "sourceMmsi")
#supression des colonnes inutiles
output3 = output3[,-c(28,29,32:39)]
# pour les messages de type 4
#suprression des éléments inutiles dans les colonnes
output4$V2=gsub("^.*?=","", output4$V2)
output4$V3=gsub("^.*?=","", output4$V3)
output4$V4=gsub("^.*?=","", output4$V4)
output4$V5=gsub("^.*?=","", output4$V5)
output4$V6=gsub("^.*?=","", output4$V6)
output4$V7=gsub("^.*?=","", output4$V7)
output4$V8=gsub("^.*?=","", output4$V8)
output4$V9=gsub("^.*?=","", output4$V9)
output4$V10=gsub("^.*?=","", output4$V10)
output4$V11=gsub("^.*?=","", output4$V11)
output4$V12=gsub("^.*?=","", output4$V12)
output4$V13=gsub("^.*?=","", output4$V13)
output4$V14=gsub("^.*?=","", output4$V14)
output4$V15=gsub("^.*?=","", output4$V15)
output4$V29=gsub("^.*?=","", output4$V29)
output4$V30=gsub("^.*?=","", output4$V30)
output4$V31=gsub("^.*?=","", output4$V31)
output4$V32=gsub("[[:punct:][:lower:][:upper:]]","", output4$V32)
#nomenclature des colonnes
colnames(output4) <- c("NumberTypeMessage","MessageType", "imo", "callsign", "shipname", "shipType","toBow","toStern","toStarboard","toPort","positionFixingDevice","eta","draught","destination","dataTerminalReady","AISMessage", "SyncState", "SlotTime-out", "Undefined", "AB","Data","Data1","NMEAMessage", "SyncState", "SlotTime-out", "Undefined", "AB","Data","Data1", "Metadata", "Received", "repeatIndicator", "sourceMmsi")
#supression des colonnes inutiles
output4 = output4[,-c(30,31,34:39)]
#new_DF <- output[rowSums(is.na(output)) > 0,] #A compléter pour numbertypemessage
#changement de type des variables (string à numérique)
output1$Timestamp=as.numeric(output1$Timestamp)
output1$sourceMmsi=as.numeric(output1$sourceMmsi)
output1$Latitude = as.numeric(output1$Latitude)
output1$Longitude = as.numeric(output1$Longitude)
output2$Latitude = as.numeric(output2$Latitude)
output2$Longitude = as.numeric(output2$Longitude)
attach(output1)
lat = output2$Latitude
lon = output2$Longitude
library(fpc)
DBSCAN = dbscan(cbind(lat, lon), eps = 10, MinPts = 3)
plot(lon, lat, col = DBSCAN$cluster, pch = 20)
for (i in 1:5){
km.out= kmeans(cbind(lat, lon),i,nstart = 20)
plot(km.out)
}
a = output1[which(output1$sourceMmsi == 211511850),]
#a = a[order(a$Timestamp),]
#Calculate Distance from  Latitude and Longitude
#library(geosphere)
#pos1 = (c(output1$Latitude[7],output1$Longitude[7]))
#pos2 = (c(output1$Latitude[8],output1$Longitude[8]))
#earthDist(Latitude[7],Longitude[7],Latitude[8],Longitude[8])
shipTrajectory(227006760,output1)
#install.packages("rworldmap")
#install.packages("rworldxtra")
library(rworldmap)
library(rworldxtra)
bb = qbbox(lat = a$Latitude,lon = a$Longitude)
map = GetMap.bbox(bb$lonR,bb$latR,destfile = "cartographie.png",maptype="hybrid")
PlotOnStaticMap(map,lat=a$Latitude,lon = a$Longitude,destfile = "cartographie.png",cex=2,pch=20)
newmap <- getMap(resolution = "high")
plot(newmap,xlim = c(-180,180), ylim = c(-180,180), asp = 1)
lat = output2$Latitude
lon = output2$Longitude
DBSCAN = dbscan(cbind(lat, lon), eps = 10, MinPts = 3)
points(lon,lat,col=DBSCAN$cluster,cex=1,pch=20)
plot(newmap,xlim = c(115, 182), ylim = c(30, 92), asp = 1)
points(a$Longitude,a$Latitude,col="red",cex=1,pch=20)
#Travail sur trajectoire des bateaux
b=shipTrajectory(227006760,output1)
write.table(b,"test.txt",sep="",row.names=FALSE)
boatposition <-output1[,c(22,7,8)]
attach(boatposition)
boatposition[sort(boatposition$sourceMmsi)]
boatposition[order(rank(sourceMmsi),Latitude)]
setwd("C:/Users/nicolas/RCodeMimitaryProject")
b=shipTrajectory(227006760,output1)
write.table(b,"test.txt",sep="",row.names=FALSE)
plot(newmap,xlim = c(-180,180), ylim = c(-180,180), asp = 1)
lat = output2$Latitude
lon = output2$Longitude
DBSCAN = dbscan(cbind(lat, lon), eps = 10, MinPts = 3)
points(lon,lat,col=DBSCAN$cluster,cex=1,pch=20)
plot(newmap,xlim = c(115, 182), ylim = c(30, 92), asp = 1)
points(a$Longitude,a$Latitude,col="red",cex=1,pch=20)
plot(newmap,xlim = c(-180,180), ylim = c(-180,180), asp = 1)
lat = output2$Latitude
lon = output2$Longitude
DBSCAN = dbscan(cbind(lat, lon), eps = 10, MinPts = 3)
points(lon,lat,col=DBSCAN$cluster,cex=1,pch=20)
table = cbind(lat,lon)
for (i in 0:5){
kmean = kmeans(table,i)
plot(kmean)
}
for (i in 1:5){
kmean = kmeans(table,i)
}
for (i in 1:5){
kmean = kmeans(table,i)
plot(kmean)
}
points(lon,lat,col=kmeans$cluster,cex=1,pch=20)
points?
fsd
?points
kmean = kmeans(table,2)
plot(kmean)
plot(kmean☻$cluster)
plot(kmean$cluster)
points(lon,lat,col=kmeans$cluster,cex=1,pch=20)
plot(newmap,xlim = c(-180,180), ylim = c(-180,180), asp = 1)
points(lon,lat,col=kmeans$cluster,cex=1,pch=20)
kmean = kmeans(table,3)
plot(kmean$cluster)
kmean = kmeans(table,6)
plot(kmean$cluster)
?plot
plotcluster
?plotcluster
plotcluster(kmean$cluster)
?kmeans
km.out = kmeans(table,3,nstart = 20)
km.out$cluster
plot(table,col=(km.out$cluster+1), main="K-Means Clustering Results with K=2", xlab="",ylab="", pch=20,cex=2)
for (i in 1:5){
km.out = kmeans(table,3,nstart = 20)
km.out$cluster
plot(table,col=(km.out$cluster+1), main="K-Means Clustering Results with K=2", xlab="",ylab="", pch=20,cex=2)
}
for (i in 1:5){
km.out = kmeans(table,i,nstart = 20)
plot(table,col=(km.out$cluster+1), main="K-Means Clustering Results with K=2", xlab="",ylab="", pch=20,cex=2)
}
for (i in 1:5){
km.out = kmeans(table,i,nstart = 20)
plot(table,col=(km.out$cluster+1), main="K-Means Clustering Results with K=i", xlab="",ylab="", pch=20,cex=2)
}
for (i in 1:5){
km.out = kmeans(table,i,nstart = 20)
plot(table,col=(km.out$cluster+1), main="K-Means Clustering Results with K="+i, xlab="",ylab="", pch=20,cex=2)
}
for (i in 1:5){
km.out = kmeans(table,i,nstart = 20)
plot(table,col=(km.out$cluster+1), main="K-Means Clustering Results with K=i", xlab="",ylab="", pch=20,cex=2)
}
for (i in 1:5){
km.out = kmeans(table,i,nstart = 20)
plot(table,col=(km.out$cluster+1), main="K-Means Clustering Results with K=i", xlab="",ylab="", pch=20,cex=2)
}
for (i in 1:5){
c('K-Means Clustering Results with K=',i)
}
for (i in 1:5){
k = c('K-Means Clustering Results with K=',i)
View(k)
}
for (i in 1:5){
k = c('K-Means Clustering Results with K=',i)
k
}
for (i in 1:5){
k = c('K-Means Clustering Results with K=',i)
print(k)
}
for (i in 1:5){
km.out = kmeans(table,i,nstart = 20)
k = c('K-Means Clustering Results with K=',i)
plot(table,col=(km.out$cluster+1), main= k, xlab="",ylab="", pch=20,cex=2)
}
for (i in 1:5){
km.out = kmeans(table,i,nstart = 20)
k = c('K-Means Clustering Results with K=',i)
plot(table,col=(km.out$cluster+1), main= k, xlab="",ylab="", pch=20,cex=2)
}
for (i in 1:5){
km.out = kmeans(table,i,nstart = 20)
k = c('K-Means Clustering Results with K=',i)
plot(table,col=(km.out$cluster+1), main= k, xlab="",ylab="", pch=20,cex=2)
index.DB(table,km.out$cluster)
}
library(clusterSim)
for (i in 1:5){
km.out = kmeans(table,i,nstart = 20)
k = c('K-Means Clustering Results with K=',i)
plot(table,col=(km.out$cluster+1), main= k, xlab="",ylab="", pch=20,cex=2)
index.DB(table,km.out$cluster)
}
for (i in 1:5){
km.out = kmeans(table,i,nstart = 20)
k = c('K-Means Clustering Results with K=',i)
plot(table,col=(km.out$cluster+1), main= k, xlab="",ylab="", pch=20,cex=2)
print(index.DB(table,km.out$cluster))
}
for (i in 1:5){
km.out = kmeans(table,i,nstart = 20)
k = c('K-Means Clustering Results with K=',i)
plot(table,col=(km.out$cluster+1), main= k, xlab="",ylab="", pch=20,cex=2)
index.DB(table,km.out$cluster)
}
for (i in 1:5){
km.out = kmeans(table,i,nstart = 20)
k = c('K-Means Clustering Results with K=',i)
plot(table,col=(km.out$cluster+1), main= k, xlab="",ylab="", pch=20,cex=2)
print(index.DB(table,km.out$cluster))
}
print(index.DB(table,km.out$cluster)$DB)
for (i in 1:5){
km.out = kmeans(table,i,nstart = 20)
k = c('K-Means Clustering Results with K=',i)
plot(table,col=(km.out$cluster+1), main= k, xlab="",ylab="", pch=20,cex=2)
print(index.DB(table,km.out$cluster)$DB)
}
for (i in 2:5){
km.out = kmeans(table,i,nstart = 20)
k = c('K-Means Clustering Results with K=',i)
plot(table,col=(km.out$cluster+1), main= k, xlab="",ylab="", pch=20,cex=2)
print(index.DB(table,km.out$cluster)$DB)
}
View(table)
plot(newmap,xlim = c(-180,180), ylim = c(-180,180), asp = 1)
for (i in 2:5){
km.out = kmeans(table,i,nstart = 20)
#k = c('K-Means Clustering Results with K=',i)
plot(newmap,xlim = c(-180,180), ylim = c(-180,180), asp = 1)
points(table,col=(km.out$cluster+1), pch=20,cex=2)
print(index.DB(table,km.out$cluster)$DB)
}
plot(newmap,xlim = c(-180,180), ylim = c(-180,180), asp = 1)
DBSCAN = dbscan(table, eps = 10, MinPts = 3)
points(lon,lat,col=DBSCAN$cluster,cex=1,pch=20)
for (i in 2:5){
km.out = kmeans(table,i,nstart = 20)
#k = c('K-Means Clustering Results with K=',i)
plot(newmap,xlim = c(-180,180), ylim = c(-180,180), asp = 1)
points(lon,lat,col=(km.out$cluster+1), pch=20,cex=2)
print(index.DB(table,km.out$cluster)$DB)
}
for (i in 2:5){
km.out = kmeans(table,i,nstart = 20)
#k = c('K-Means Clustering Results with K=',i)
plot(newmap,xlim = c(-180,180), ylim = c(-180,180), asp = 1)
points(lon,lat,col=(km.out$cluster+1), pch=20,cex=2)
print(index.DB(table,km.out$cluster)$DB)
}
for (i in 2:10){
km.out = kmeans(table,i,nstart = 20)
#k = c('K-Means Clustering Results with K=',i)
plot(newmap,xlim = c(-180,180), ylim = c(-180,180), asp = 1)
points(lon,lat,col=(km.out$cluster+1), pch=20,cex=2)
print(index.DB(table,km.out$cluster)$DB)
invisible(readline(prompt="Press [enter] to continue"))
}
output1[1]
output8[1]
View(output8)
output8[2]
#Tri par type
output1 = output[which(NumberTypeMessage == 1),]
output2 = output[which(NumberTypeMessage == 2),]
output3 = output[which(NumberTypeMessage == 3),]
output4 = output[which(NumberTypeMessage == 4),]
output5 = output[which(NumberTypeMessage == 5),]
output6 = output[which(NumberTypeMessage == 6),]
output7 = output[which(NumberTypeMessage == 7),]
output8 = output[which(NumberTypeMessage == 8),]
View(output3)
#chargement du fichier
output=read.csv("outputtry.txt", sep=",", header=FALSE)
#création de la colonne NumberTypeMessage
output["NumberTypeMessage"]<- NA
#Nomenclature des différents types de messages
output$`NumberTypeMessage`[output$V1=="PositionReportClassAScheduled{messageType=PositionReportClassAScheduled}"]=1
output$`NumberTypeMessage`[output$V1=="PositionReportClassAResponseToInterrogation{messageType=PositionReportClassAResponseToInterrogation}"]=2
output$`NumberTypeMessage`[output$V1=="StandardClassBCSPositionReport{messageType=StandardClassBCSPositionReport"]=3
output$`NumberTypeMessage`[output$V1=="ShipAndVoyageData{messageType=ShipAndVoyageRelatedData"]=4
output$`NumberTypeMessage`[output$V1=="BaseStationReport{messageType=BaseStationReport"]=5
output$`NumberTypeMessage`[output$V1=="PositionReportClassAAssignedSchedule{messageType=PositionReportClassAAssignedSchedule}"]=6
output$`NumberTypeMessage`[output$V1=="AidToNavigationReport{messageType=AidToNavigationReport"]=7
output$`NumberTypeMessage`[output$V1=="ExtendedClassBEquipmentPositionReport{messageType=ExtendedClassBEquipmentPositionReport"]=8
output$`NumberTypeMessage`[output$V1=="DataLinkManagement{messageType=DataLinkManagement"]=9
output$`NumberTypeMessage`[output$V1=="BinaryBroadcastMessage{messageType=BinaryBroadcastMessage"]=10
output$`NumberTypeMessage`[output$V1=="GNSSBinaryBroadcastMessage{messageType=GNSSBinaryBroadcastMessage"]=11
output$`NumberTypeMessage`[output$V1=="AddressedBinaryMessage{messageType=AddressedBinaryMessage"]=12
output$`NumberTypeMessage`[output$V1=="UTCAndDateInquiry{messageType=UTCAndDateInquiry"]=13
output$`NumberTypeMessage`[output$V1=="StandardSARAircraftPositionReport{messageType=StandardSARAircraftPositionReport"]=14
output$`NumberTypeMessage`[output$V1=="StandardSARAircraftPositionReport{messageType=StandardSARAircraftPositionReport"]=15
output$`NumberTypeMessage`[output$V1=="ClassBCSStaticDataReport{messageType=ClassBCSStaticDataReport"]=16
output$`NumberTypeMessage`[output$V1=="ChannelManagement{messageType=ChannelManagement"]=17
output$`NumberTypeMessage`[output$V1=="UTCAndDateResponse{messageType=UTCAndDateResponse"]=18
output$`NumberTypeMessage`[output$V1=="ChannelManagement{messageType=ChannelManagement"]=19
output$`NumberTypeMessage`[output$V1=="ChannelManagement{messageType=ChannelManagement"]=20
output$`NumberTypeMessage`[output$V1=="ChannelManagement{messageType=ChannelManagement"]=21
output <- output[,c(39,1:38)]
attach(output)
#Tri par type
output1 = output[which(NumberTypeMessage == 1),]
output2 = output[which(NumberTypeMessage == 2),]
output3 = output[which(NumberTypeMessage == 3),]
output4 = output[which(NumberTypeMessage == 4),]
output5 = output[which(NumberTypeMessage == 5),]
output6 = output[which(NumberTypeMessage == 6),]
output7 = output[which(NumberTypeMessage == 7),]
output8 = output[which(NumberTypeMessage == 8),]
View(output3)
for (i in c(2:20,27:30)) {
output3[i]=gsub("^.*?=","", output3[i])
}
output3 = output[which(NumberTypeMessage == 3),]
View(output3)
output3[1,1]
output3[1,2]
length(output3)
length(output3[])
nrow(output3)
for (i in c(2:20,27:30)) {
for (k in 1:nrow(output3)){
output3[i,k]=gsub("^.*?=","", output3[i,k])
}
}
output2$V3=gsub("^.*?=","", output2$V3)
output2 = output[which(NumberTypeMessage == 2),]
output3 = output[which(NumberTypeMessage == 3),]
output4 = output[which(NumberTypeMessage == 4),]
output5 = output[which(NumberTypeMessage == 5),]
output3[1,256]
for (i in c(2:20,27:30)) {
for (k in 1:nrow(output3)){
output3[k,i]=gsub("^.*?=","", output3[k,i])
}
}
warnings()
output3 = output[which(NumberTypeMessage == 3),]
for (k in 1:nrow(output3)){
for (i in c(2:20,27:30)) {
output3[k,i]=gsub("^.*?=","", output3[k,i])
}
}
warnings()
output3 = output[which(NumberTypeMessage == 3),]
for (i in c(2:20,27:30)) {
output3[,i]=gsub("^.*?=","", output3[,i])
}
output3 = output[which(NumberTypeMessage == 3),]
output3$V2=gsub("^.*?=","", output3$V2)
output3$V3=gsub("^.*?=","", output3$V3)
output3$V4=gsub("^.*?=","", output3$V4)
output3$V5=gsub("^.*?=","", output3$V5)
output3$V6=gsub("^.*?=","", output3$V6)
output3$V7=gsub("^.*?=","", output3$V7)
output3$V8=gsub("^.*?=","", output3$V8)
output3$V9=gsub("^.*?=","", output3$V9)
output3$V10=gsub("^.*?=","", output3$V10)
output3$V11=gsub("^.*?=","", output3$V11)
output3$V12=gsub("^.*?=","", output3$V12)
output3$V13=gsub("^.*?=","", output3$V13)
output3$V14=gsub("^.*?=","", output3$V14)
output3$V15=gsub("^.*?=","", output3$V15)
output3$V16=gsub("^.*?=","", output3$V16)
output3$V17=gsub("^.*?=","", output3$V17)
output3$V18=gsub("^.*?=","", output3$V18)
output3$V19=gsub("^.*?=","", output3$V19)
output3$V20=gsub("^.*?=","", output3$V20)
output3$V27=gsub("^.*?=","", output3$V27)
output3$V28=gsub("^.*?=","", output3$V28)
output3$V29=gsub("^.*?=","", output3$V29)
for (i in c(2:20,27:30)) {
output3[,i]=gsub("^.*?=","", output3[,i])
}
output3 = output[which(NumberTypeMessage == 3),]
for (i in c(2:20,27:30)) {
output3[,i]=gsub("^.*?=","", output3[,i])
}
output3 = output[which(NumberTypeMessage == 3),]
for (i in c(2:20,27:30)) {
output3[,i]=gsub("^.*?=","", output3[,i])
}
output3$V30=gsub("[[:punct:][:lower:][:upper:]]","", output3$V30)
output3 = output[which(NumberTypeMessage == 3),]
for (i in c(2:20,27:30)) {
output3[,i]=gsub("^.*?=","", output3[,i])
}
output3$V30=gsub("[[:punct:][:lower:][:upper:]]","", output3$V30)
colnames(output3) <- c("NumberTypeMessage","MessageType", "RegionalReserved1", "SpeedOverGround", "PositionAccurate", "Latitude", "Longitude", "CourseOverGround", "TrueHeading", "Second", "RegionalReserved2", "CsUnit", "display", "dsc", "band", "message22", "assigned", "raimFlag", "commStateSelectorFlag", "commState", "AISMessage", "SyncState", "SlotTime-out", "Undefined", "AB","Data","Data1","Metadata", "Received","repeatIndicator", "sourceMmsi")
#suprression des éléments inutiles dans les colonnes
output1 = output[which(NumberTypeMessage == 1),]
output2 = output[which(NumberTypeMessage == 2),]
output3 = output[which(NumberTypeMessage == 3),]
output4 = output[which(NumberTypeMessage == 4),]
output5 = output[which(NumberTypeMessage == 5),]
output6 = output[which(NumberTypeMessage == 6),]
output7 = output[which(NumberTypeMessage == 7),]
output8 = output[which(NumberTypeMessage == 8),]
#traitement des colonnes par type de message
# pour les messages de type 1
#suprression des éléments inutiles dans les colonnes
for (i in c(2:12,20:23)) {
output1[,i]=gsub("^.*?=","", output1[,i])
}
output1$V23=gsub("[[:punct:][:lower:][:upper:]]","", output1$V23)
#nomenclature des colonnes
colnames(output1) <- c("NumberTypeMessage","MessageType", "NavigationStatus", "RateOfTurn", "SpeedOverGround", "PositionAccuracy", "Latitude", "Longitude", "CourseOverGround", "TrueHeading", "Timestamp", "specialManeuverIndicator", "raimFlag", "AISMessage", "SyncState", "SlotTime-out", "Undefined", "AB", "Data", "Data1", "Metadata", "Received", "repeatIndicator", "sourceMmsi")
#supression des colonnes inutiles
output1 = output1[,-c(21,22,25:39)]
# pour les messages de type 2
#suprression des éléments inutiles dans les colonnes
for (i in c(2:12,20:23)) {
output2[,i]=gsub("^.*?=","", output2[,i])
}
output2$V23=gsub("[[:punct:][:lower:][:upper:]]","", output2$V23)
#nomenclature des colonnes
colnames(output2) <- c("NumberTypeMessage","MessageType", "NavigationStatus", "RateOfTurn", "SpeedOverGround", "PositionAccuracy", "Latitude", "Longitude", "CourseOverGround", "TrueHeading", "Timestamp", "specialManeuverIndicator", "raimFlag", "AISMessage", "SyncState", "SlotTime-out", "Undefined", "AB", "Data", "Data1", "Metadata", "Received", "repeatIndicator", "sourceMmsi")
#supression des colonnes inutiles
output2 = output2[,-c(21,22,25:39)]
# pour les messages de type 3
#suprression des éléments inutiles dans les colonnes
for (i in c(2:20,27:30)) {
output3[,i]=gsub("^.*?=","", output3[,i])
}
output3$V30=gsub("[[:punct:][:lower:][:upper:]]","", output3$V30)
#nomenclature des colonnes
colnames(output3) <- c("NumberTypeMessage","MessageType", "RegionalReserved1", "SpeedOverGround", "PositionAccurate", "Latitude", "Longitude", "CourseOverGround", "TrueHeading", "Second", "RegionalReserved2", "CsUnit", "display", "dsc", "band", "message22", "assigned", "raimFlag", "commStateSelectorFlag", "commState", "AISMessage", "SyncState", "SlotTime-out", "Undefined", "AB","Data","Data1","Metadata", "Received","repeatIndicator", "sourceMmsi")
#supression des colonnes inutiles
output3 = output3[,-c(28,29,32:39)]
# pour les messages de type 4
#suprression des éléments inutiles dans les colonnes
for (i in c(2:15,29:32)) {
output4[,i]=gsub("^.*?=","", output4[,i])
}
output4$V32=gsub("[[:punct:][:lower:][:upper:]]","", output4$V32)
#nomenclature des colonnes
colnames(output4) <- c("NumberTypeMessage","MessageType", "imo", "callsign", "shipname", "shipType","toBow","toStern","toStarboard","toPort","positionFixingDevice","eta","draught","destination","dataTerminalReady","AISMessage", "SyncState", "SlotTime-out", "Undefined", "AB","Data","Data1","NMEAMessage", "SyncState", "SlotTime-out", "Undefined", "AB","Data","Data1", "Metadata", "Received", "repeatIndicator", "sourceMmsi")
#supression des colonnes inutiles
output4 = output4[,-c(30,31,34:39)]
View(output4)
